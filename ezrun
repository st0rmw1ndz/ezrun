#!/usr/bin/env bash
# ezrun is a shortcut system for a stdin-based menu system
# Copyright (C) 2024 frosty <inthishouseofcards@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

set -eu

XDG_CONFIG_HOME="${XDG_CONFIG_HOME:-$HOME/.config}"

# shellcheck disable=SC1091
[ -f "$XDG_CONFIG_HOME/ezrun/ezrunrc" ] && . "$XDG_CONFIG_HOME/ezrun/ezrunrc"
# shellcheck disable=SC1091
[ -f "$HOME/.ezrunrc" ] && . "$HOME/.ezrunrc"

# TODO(frosty): Switch `compgen' for a purely POSIX-compliant way of listing functions.
FUNCTIONS=$(compgen -A function)

CHOICE_COMMAND="${CHOICE_COMMAND:-dmenu}"
REPLACEMENTS="${REPLACEMENTS:-}"

if [ -n "$REPLACEMENTS" ]; then
    REPLACE_ARGUMENTS=
    while IFS=':' read -r search replace; do
        REPLACE_ARGUMENTS="${REPLACE_ARGUMENTS} -e 's/${search}/${replace}/g'"
    done <<EOF
$REPLACEMENTS
EOF
    print_func() { printf '%s\n' "$1" | eval sed "$REPLACE_ARGUMENTS"; }
else
    print_func() { printf '%s\n' "$1"; }
fi

eval "$(printf '%s' "$FUNCTIONS" | while read -r func; do
    [ "${func#_}" = "$func" ] && print_func "$func"
done | $CHOICE_COMMAND "$@")" &
